[package]
name = "drive-by-wire"
version = "0.2.1"
description = "Provide Drive-by-Wire buttons for the Mercedes-Benz SLK55 AMG 2010 (R171)"
edition = "2021"
license = "GPL v3"
authors = ["Turbo Fredriksson <turbo@bayour.com>"]
homepage = "https://github.com/FransUrbo/drive-by-wire"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# =====

[dependencies]
defmt = "0.3"
defmt-rtt = "0.4"

critical-section = "1.1"
embedded-hal = "0.2.7"

cortex-m = { version = "0.7.6", features = ["inline-asm"] }
cortex-m-rt = "0.7.0"
panic-probe = { version = "0.3", features = ["print-defmt"] }

portable-atomic = { version = "1.5", features = ["critical-section"] }
static_cell = "2.1.0"

[dependencies.defmt-serial]
git = "https://github.com/gauteh/defmt-serial.git"
rev = "bafdc3f"

[dependencies.ws2812]
git = "https://github.com/FransUrbo/rust-libs-ws2812.git"
rev = "ab5831"

[dependencies.r503]
git = "https://github.com/FransUrbo/rust-libs-r503.git"
version = "0.2.0"

[dependencies.debounce]
git = "https://github.com/FransUrbo/rust-libs-debounce.git"
rev = "362de7"

[dependencies.actuator]
git = "https://github.com/FransUrbo/rust-libs-actuator.git"
rev = "90cf47a"

# They haven't released the `embassy_time::with_deadline` yet, so need to use the GIT version.
[dependencies.embassy-embedded-hal]
git = "https://github.com/embassy-rs/embassy.git"
rev = "5af0fe8"
features = ["defmt"]

[dependencies.embassy-executor]
git = "https://github.com/embassy-rs/embassy.git"
rev = "5af0fe8"
features = ["task-arena-size-32768", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"]

[dependencies.embassy-time-driver]
git = "https://github.com/embassy-rs/embassy.git"
rev = "5af0fe8"

[dependencies.embassy-time]
git = "https://github.com/embassy-rs/embassy.git"
rev = "5af0fe8"
features = ["defmt", "defmt-timestamp-uptime"]

[dependencies.embassy-rp]
git = "https://github.com/embassy-rs/embassy.git"
rev = "5af0fe8"
features = ["defmt", "unstable-pac", "time-driver", "critical-section-impl"]

[dependencies.embassy-sync]
git = "https://github.com/embassy-rs/embassy.git"
rev = "5af0fe8"
features = ["defmt"]

# =====
# https://doc.rust-lang.org/cargo/reference/profiles.html

# ----- Root profiles.

# => `target/thumbv6m-none-eabi/debug/drive-by-wire`
[profile.dev]
codegen-units = 1
debug = "full"
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
# Strips EVERYTHING, resulting in absolute minimum size binary.
# => `target/thumbv6m-none-eabi/release/drive-by-wire`
[profile.release]
codegen-units = 1
debug = false
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false
strip = true

# ----- Custom profiles.

# Same as `release` but leave the debug and info etc macros intact.
# Results in a slightly larger binary.
# => `target/thumbv6m-none-eabi/release-dev/drive-by-wire`
[profile.release-dev]
inherits = "release"
strip = "debuginfo"

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3

# =====

[[bin]]
name = "prepare-flash"
path = "src/prepare-flash.rs"

[[bin]]
name = "read_config"
path = "src/read_config.rs"

[[bin]]
name = "set-valet-mode"
path = "src/set-valet-mode.rs"

[[bin]]
name = "unset-valet-mode"
path = "src/unset-valet-mode.rs"

[[bin]]
name = "set-password"
path = "src/set-password.rs"

[[bin]]
name = "set-fingerprint"
path = "src/set-fingerprint.rs"
